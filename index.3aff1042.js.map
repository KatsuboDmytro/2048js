{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Ceil.class.js","src/modules/Tile.class.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\n\nvar $143a497f85a21e4c$var$SCORE = 0;\nvar $143a497f85a21e4c$export$d4a1bccfd52ebd3 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Ceil(gridElement, x, y) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Ceil);\n        var cell = document.createElement(\"div\");\n        cell.classList.add(\"field-cell\");\n        gridElement.append(cell);\n        this.x = x;\n        this.y = y;\n        this.score = 0;\n        this.gameScore = document.querySelector(\".game-score\");\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Ceil, [\n        {\n            key: \"linkTile\",\n            value: function linkTile(tile) {\n                tile.setXY(this.x, this.y);\n                this.linkedTile = tile;\n            }\n        },\n        {\n            key: \"unlinkTile\",\n            value: function unlinkTile() {\n                this.linkedTile = null;\n            }\n        },\n        {\n            key: \"isEmpty\",\n            value: function isEmpty() {\n                return !this.linkedTile;\n            }\n        },\n        {\n            key: \"makeAnEmpty\",\n            value: function makeAnEmpty() {\n                $143a497f85a21e4c$var$SCORE = 0;\n                this.gameScore.innerHTML = $143a497f85a21e4c$var$SCORE;\n                return this.linkedTile = null;\n            }\n        },\n        {\n            key: \"linkTileForMerge\",\n            value: function linkTileForMerge(tile) {\n                tile.setXY(this.x, this.y);\n                this.linkedTileForMerge = tile;\n            }\n        },\n        {\n            key: \"unlinkTileForMerge\",\n            value: function unlinkTileForMerge() {\n                this.linkedTileForMerge = null;\n            }\n        },\n        {\n            key: \"hasTileForMerge\",\n            value: function hasTileForMerge() {\n                return !!this.linkedTileForMerge;\n            }\n        },\n        {\n            key: \"canAccept\",\n            value: function canAccept(newTile) {\n                return this.isEmpty() || !this.hasTileForMerge() && this.linkedTile.value === newTile.value;\n            }\n        },\n        {\n            key: \"mergeTiles\",\n            value: function mergeTiles() {\n                if (this.linkedTile) {\n                    var result = this.linkedTile.value + this.linkedTileForMerge.value;\n                    this.linkedTile.setValue(result);\n                    this.score += result;\n                    if ($143a497f85a21e4c$var$SCORE < this.score) {\n                        console.log(this.score);\n                        $143a497f85a21e4c$var$SCORE = this.score;\n                        this.gameScore.textContent = $143a497f85a21e4c$var$SCORE;\n                    }\n                    if (result >= 2048) {\n                        var win = document.querySelector(\".message-win\");\n                        win.classList.toggle(\"hidden\");\n                    }\n                    this.linkedTileForMerge.removeFromDOM();\n                    this.unlinkTileForMerge();\n                }\n            }\n        }\n    ]);\n    return Ceil;\n}();\n\n\n\n\nvar $0158782d112d75f2$var$COLORS = {\n    2: \"#eee4da\",\n    4: \"#ede0c8\",\n    8: \"#f2b179\",\n    16: \"#f59563\",\n    32: \"#f67c5f\",\n    64: \"#f65e3b\",\n    128: \"#edcf72\",\n    256: \"#edcc61\",\n    512: \"#edc850\",\n    1024: \"#edc53f\",\n    2048: \"#edc22e\"\n};\nvar $0158782d112d75f2$export$235cb65c20ad2b7 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Tile(gridElement) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Tile);\n        this.tileElement = document.createElement(\"div\");\n        this.tileElement.classList.add(\"tile\");\n        this.setValue(Math.random() > 0.5 ? 2 : 4);\n        gridElement.append(this.tileElement);\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Tile, [\n        {\n            key: \"setValue\",\n            value: function setValue(value) {\n                this.value = value;\n                this.tileElement.textContent = value;\n                this.tileElement.style.setProperty(\"--bg-color\", \"\".concat($0158782d112d75f2$var$COLORS[value]));\n                this.tileElement.style.setProperty(\"--text-color\", \"\".concat(value >= 8 ? \"#f9f6f2\" : \"#776e65\"));\n            }\n        },\n        {\n            key: \"setXY\",\n            value: function setXY(x, y) {\n                this.x = x;\n                this.y = y;\n                this.tileElement.style.setProperty(\"--x\", x);\n                this.tileElement.style.setProperty(\"--y\", y);\n            }\n        },\n        {\n            key: \"removeFromDOM\",\n            value: function removeFromDOM() {\n                this.tileElement.remove();\n            }\n        },\n        {\n            key: \"waitForTransitionEnd\",\n            value: function waitForTransitionEnd() {\n                var _this = this;\n                return new Promise(function(resolve) {\n                    _this.tileElement.addEventListener(\"transitionend\", resolve, {\n                        once: true\n                    });\n                });\n            }\n        },\n        {\n            key: \"waitForAnimationEnd\",\n            value: function waitForAnimationEnd() {\n                var _this = this;\n                return new Promise(function(resolve) {\n                    _this.tileElement.addEventListener(\"animationend\", resolve, {\n                        once: true\n                    });\n                });\n            }\n        }\n    ]);\n    return Tile;\n}();\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$GRID_SIZE = 4;\nvar $3d28d7f1aac198f5$var$CELLS_COUNT = $3d28d7f1aac198f5$var$GRID_SIZE * $3d28d7f1aac198f5$var$GRID_SIZE;\nvar $3d28d7f1aac198f5$export$985739bfa5723e08 = /*#__PURE__*/ function() {\n    function Game(gridElement) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.cells = [];\n        for(var i = 0; i < $3d28d7f1aac198f5$var$CELLS_COUNT; i++)this.cells.push(new (0, $143a497f85a21e4c$export$d4a1bccfd52ebd3)(gridElement, i % $3d28d7f1aac198f5$var$GRID_SIZE, Math.floor(i / $3d28d7f1aac198f5$var$GRID_SIZE)));\n        this.score = 0;\n        this.cellsGroupedByColumn = this.groupCellsByColumn();\n        this.cellsGroupedByReversedColumn = this.cellsGroupedByColumn.map(function(column) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(column).reverse();\n        });\n        this.cellsGroupedByRow = this.groupCellsByRow();\n        this.cellsGroupedByReversedRow = this.cellsGroupedByRow.map(function(raw) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(raw).reverse();\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"getRandomEmptyCell\",\n            value: function getRandomEmptyCell() {\n                var emptyCells = this.cells.filter(function(cell) {\n                    return cell.isEmpty();\n                });\n                var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                return emptyCells[randomIndex];\n            }\n        },\n        {\n            key: \"groupCellsByColumn\",\n            value: function groupCellsByColumn() {\n                return this.cells.reduce(function(groupedCells, cell) {\n                    groupedCells[cell.x] = groupedCells[cell.x] || [];\n                    groupedCells[cell.x][cell.y] = cell;\n                    return groupedCells;\n                }, []);\n            }\n        },\n        {\n            key: \"groupCellsByRow\",\n            value: function groupCellsByRow() {\n                return this.cells.reduce(function(groupedCells, cell) {\n                    groupedCells[cell.y] = groupedCells[cell.y] || [];\n                    groupedCells[cell.y][cell.x] = cell;\n                    return groupedCells;\n                }, []);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.slideTiles(this.cellsGroupedByColumn);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.slideTiles(this.cellsGroupedByReversedColumn);\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.slideTiles(this.cellsGroupedByRow);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.slideTiles(this.cellsGroupedByReversedRow);\n            }\n        },\n        {\n            key: \"canMoveUp\",\n            value: function canMoveUp() {\n                return this.canMove(this.cellsGroupedByColumn);\n            }\n        },\n        {\n            key: \"canMoveDown\",\n            value: function canMoveDown() {\n                return this.canMove(this.cellsGroupedByReversedColumn);\n            }\n        },\n        {\n            key: \"canMoveLeft\",\n            value: function canMoveLeft() {\n                return this.canMove(this.cellsGroupedByRow);\n            }\n        },\n        {\n            key: \"canMoveRight\",\n            value: function canMoveRight() {\n                return this.canMove(this.cellsGroupedByReversedRow);\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove(groupedCells) {\n                var _this = this;\n                return groupedCells.some(function(group) {\n                    return _this.canMoveInGroup(group);\n                });\n            }\n        },\n        {\n            key: \"canMoveInGroup\",\n            value: function canMoveInGroup(group) {\n                return group.some(function(cell, index) {\n                    if (index === 0) return false;\n                    if (cell.isEmpty()) return false;\n                    var targetCell = group[index - 1];\n                    return targetCell.canAccept(cell.linkedTile);\n                });\n            }\n        },\n        {\n            key: \"slideTiles\",\n            value: function slideTiles(groupedCells) {\n                var _this = this;\n                var promises = [];\n                groupedCells.forEach(function(group) {\n                    return _this.slideTilesInGroup(group, promises);\n                });\n                Promise.all(promises);\n                this.cells.forEach(function(cell) {\n                    cell.hasTileForMerge() && cell.mergeTiles();\n                });\n            }\n        },\n        {\n            key: \"slideTilesInGroup\",\n            value: function slideTilesInGroup(group, promises) {\n                for(var i = 1; i < group.length; i++){\n                    if (group[i].isEmpty()) continue;\n                    var cellWithTile = group[i];\n                    var targetCell = void 0;\n                    var j = i - 1;\n                    while(j >= 0 && group[j].canAccept(cellWithTile.linkedTile)){\n                        targetCell = group[j];\n                        j--;\n                    }\n                    if (!targetCell) continue;\n                    promises.push(cellWithTile.linkedTile.waitForTransitionEnd());\n                    if (targetCell.isEmpty()) targetCell.linkTile(cellWithTile.linkedTile);\n                    else targetCell.linkTileForMerge(cellWithTile.linkedTile);\n                    cellWithTile.unlinkTile();\n                }\n            }\n        },\n        {\n            key: \"start\",\n            value: function start(gridElement) {\n                this.getRandomEmptyCell().linkTile(new (0, $0158782d112d75f2$export$235cb65c20ad2b7)(gridElement));\n                this.getRandomEmptyCell().linkTile(new (0, $0158782d112d75f2$export$235cb65c20ad2b7)(gridElement));\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                var tiles = document.querySelectorAll(\".tile\");\n                tiles.forEach(function(tile) {\n                    tile.remove();\n                });\n                this.cells.forEach(function(cell) {\n                    return cell.unlinkTile();\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$gridElement = document.getElementById(\"game-field\");\nvar $197cd56b15c33885$var$lose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$start = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$game = new (0, $3d28d7f1aac198f5$export$985739bfa5723e08)($197cd56b15c33885$var$gridElement);\nfunction $197cd56b15c33885$var$setupInputOnce() {\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handleInput, {\n        once: true\n    });\n}\nfunction $197cd56b15c33885$var$handleInput(event) {\n    switch(event.key){\n        case \"ArrowUp\":\n            if (!$197cd56b15c33885$var$game.canMoveUp()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            if (!$197cd56b15c33885$var$game.canMoveDown()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            if (!$197cd56b15c33885$var$game.canMoveLeft()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            if (!$197cd56b15c33885$var$game.canMoveRight()) {\n                $197cd56b15c33885$var$setupInputOnce();\n                return;\n            }\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            $197cd56b15c33885$var$setupInputOnce();\n            return;\n    }\n    var newTile = new (0, $0158782d112d75f2$export$235cb65c20ad2b7)($197cd56b15c33885$var$gridElement);\n    $197cd56b15c33885$var$game.getRandomEmptyCell().linkTile(newTile);\n    if (!$197cd56b15c33885$var$game.canMoveUp() && !$197cd56b15c33885$var$game.canMoveDown() && !$197cd56b15c33885$var$game.canMoveLeft() && !$197cd56b15c33885$var$game.canMoveRight()) {\n        newTile.waitForAnimationEnd();\n        $197cd56b15c33885$var$lose.classList.toggle(\"hidden\");\n        return;\n    }\n    $197cd56b15c33885$var$setupInputOnce();\n}\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start($197cd56b15c33885$var$gridElement);\n        $197cd56b15c33885$var$setupInputOnce();\n        $197cd56b15c33885$var$button.classList.replace(\"start\", \"restart\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$start.classList.toggle(\"hidden\");\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$button.classList.replace(\"restart\", \"start\");\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$start.classList.toggle(\"hidden\");\n    }\n});\n\n})();\n//# sourceMappingURL=index.3aff1042.js.map\n","'use strict';\r\n\r\nimport { Game } from '../modules/Game.class';\r\nimport { Tile } from '../modules/Tile.class';\r\n\r\nconst gridElement = document.getElementById('game-field');\r\nconst lose = document.querySelector('.message-lose');\r\nconst start = document.querySelector('.message-start');\r\n\r\nconst game = new Game(gridElement);\r\n\r\nfunction setupInputOnce() {\r\n  document.addEventListener('keydown', handleInput, { once: true });\r\n}\r\n\r\nfunction handleInput(event) {\r\n  switch(event.key) {\r\n    case \"ArrowUp\":\r\n      if (!game.canMoveUp()) {\r\n        setupInputOnce();\r\n        return;\r\n      }\r\n      game.moveUp();\r\n      break;\r\n    case \"ArrowDown\":\r\n      if (!game.canMoveDown()) {\r\n        setupInputOnce();\r\n        return;\r\n      }\r\n      game.moveDown();\r\n      break;\r\n    case \"ArrowLeft\":\r\n      if (!game.canMoveLeft()) {\r\n        setupInputOnce();\r\n        return;\r\n      }\r\n      game.moveLeft();\r\n      break;\r\n    case \"ArrowRight\":\r\n      if (!game.canMoveRight()) {\r\n        setupInputOnce();\r\n        return;\r\n      }\r\n      game.moveRight();\r\n      break;\r\n    default:\r\n      setupInputOnce();\r\n      return;\r\n  }\r\n\r\n  const newTile = new Tile(gridElement);\r\n  game.getRandomEmptyCell().linkTile(newTile);\r\n\r\n  if (!game.canMoveUp() && !game.canMoveDown() && !game.canMoveLeft() && !game.canMoveRight()) {\r\n    newTile.waitForAnimationEnd();\r\n    lose.classList.toggle('hidden');\r\n    return;\r\n  }\r\n\r\n  setupInputOnce();\r\n}\r\n\r\nconst button = document.querySelector('.button');\r\n\r\nbutton.addEventListener('click', () => {\r\n  if (button.classList.contains('start')) {\r\n    game.start(gridElement);\r\n    setupInputOnce();\r\n    button.classList.replace('start', 'restart');\r\n    button.textContent = 'Restart';\r\n    start.classList.toggle('hidden');\r\n  } else {\r\n    game.restart();\r\n    button.classList.replace('restart', 'start');\r\n    button.textContent = 'Start';\r\n    start.classList.toggle('hidden');\r\n  }\r\n});\r\n\r\n","'use strict';\r\n\r\nimport { Ceil } from \"./Ceil.class\";\r\nimport { Tile } from \"./Tile.class\";\r\n\r\nconst GRID_SIZE = 4;\r\nconst CELLS_COUNT = GRID_SIZE * GRID_SIZE;\r\n\r\nexport class Game {\r\n  constructor(gridElement) {\r\n    this.cells = [];\r\n    for (let i = 0; i < CELLS_COUNT; i++) {\r\n      this.cells.push(\r\n        new Ceil(gridElement, i % GRID_SIZE, Math.floor(i / GRID_SIZE))\r\n      );\r\n    }\r\n\r\n    this.score = 0;\r\n    this.cellsGroupedByColumn = this.groupCellsByColumn();\r\n    this.cellsGroupedByReversedColumn = this.cellsGroupedByColumn.map(column => [...column].reverse());\r\n    this.cellsGroupedByRow = this.groupCellsByRow();\r\n    this.cellsGroupedByReversedRow = this.cellsGroupedByRow.map(raw => [...raw].reverse());\r\n  }\r\n\r\n  getRandomEmptyCell() {\r\n    const emptyCells = this.cells.filter(cell => cell.isEmpty());\r\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\r\n    return emptyCells[randomIndex];\r\n  }\r\n\r\n  groupCellsByColumn() {\r\n    return this.cells.reduce((groupedCells, cell) => {\r\n      groupedCells[cell.x] = groupedCells[cell.x] || [];\r\n      groupedCells[cell.x][cell.y] = cell;\r\n      return groupedCells;\r\n    }, []);\r\n  }\r\n\r\n  groupCellsByRow() {\r\n    return this.cells.reduce((groupedCells, cell) => {\r\n      groupedCells[cell.y] = groupedCells[cell.y] || [];\r\n      groupedCells[cell.y][cell.x] = cell;\r\n      return groupedCells;\r\n    }, []);\r\n  }\r\n\r\n  moveUp() {\r\n    this.slideTiles(this.cellsGroupedByColumn);\r\n  }\r\n\r\n  moveDown() {\r\n    this.slideTiles(this.cellsGroupedByReversedColumn);\r\n  }\r\n\r\n  moveLeft() {\r\n    this.slideTiles(this.cellsGroupedByRow);\r\n  }\r\n\r\n  moveRight() {\r\n    this.slideTiles(this.cellsGroupedByReversedRow);\r\n  }\r\n\r\n  canMoveUp() {\r\n    return this.canMove(this.cellsGroupedByColumn);\r\n  }\r\n\r\n  canMoveDown() {\r\n    return this.canMove(this.cellsGroupedByReversedColumn);\r\n  }\r\n\r\n  canMoveLeft() {\r\n    return this.canMove(this.cellsGroupedByRow);\r\n  }\r\n\r\n  canMoveRight() {\r\n    return this.canMove(this.cellsGroupedByReversedRow);\r\n  }\r\n\r\n  canMove(groupedCells) {\r\n    return groupedCells.some(group =>  this.canMoveInGroup(group));\r\n  }\r\n\r\n  canMoveInGroup(group) {\r\n    return group.some((cell, index) => {\r\n      if (index === 0) {\r\n        return false;\r\n      }\r\n\r\n      if (cell.isEmpty()) {\r\n        return false;\r\n      }\r\n\r\n      const targetCell = group[index - 1];\r\n      return targetCell.canAccept(cell.linkedTile);\r\n    });\r\n  }\r\n\r\n  slideTiles(groupedCells) {\r\n    const promises = [];\r\n\r\n    groupedCells.forEach(group => this.slideTilesInGroup(group, promises));\r\n\r\n    Promise.all(promises);\r\n    this.cells.forEach(cell => {\r\n      cell.hasTileForMerge() && cell.mergeTiles()\r\n    });\r\n  }\r\n\r\n  slideTilesInGroup(group, promises) {\r\n    for (let i = 1; i < group.length; i++) {\r\n      if (group[i].isEmpty()) {\r\n        continue;\r\n      }\r\n\r\n      const cellWithTile = group[i];\r\n\r\n      let targetCell;\r\n      let j = i - 1;\r\n      while (j >= 0 && group[j].canAccept(cellWithTile.linkedTile)) {\r\n        targetCell = group[j];\r\n        j--;\r\n      }\r\n\r\n      if (!targetCell) {\r\n        continue;\r\n      }\r\n\r\n      promises.push(cellWithTile.linkedTile.waitForTransitionEnd());\r\n\r\n      if (targetCell.isEmpty()) {\r\n        targetCell.linkTile(cellWithTile.linkedTile);\r\n      } else {\r\n        targetCell.linkTileForMerge(cellWithTile.linkedTile);\r\n      }\r\n\r\n      cellWithTile.unlinkTile();\r\n    }\r\n  }\r\n\r\n  start(gridElement) {\r\n    this.getRandomEmptyCell().linkTile(new Tile(gridElement));\r\n    this.getRandomEmptyCell().linkTile(new Tile(gridElement));\r\n  }\r\n\r\n  restart() {\r\n    const tiles = document.querySelectorAll('.tile');\r\n    tiles.forEach(tile => {\r\n      tile.remove();\r\n    });\r\n\r\n    this.cells.forEach(cell => cell.unlinkTile());\r\n  }\r\n}\r\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","let SCORE = 0;\r\n\r\nexport class Ceil {\r\n  constructor(gridElement, x, y) {\r\n    const cell = document.createElement(\"div\");\r\n    cell.classList.add('field-cell');\r\n    gridElement.append(cell);\r\n    this.x = x;\r\n    this.y = y;\r\n    this.score = 0;\r\n    this.gameScore = document.querySelector('.game-score');\r\n  }\r\n\r\n  linkTile(tile) {\r\n    tile.setXY(this.x, this.y);\r\n    this.linkedTile = tile;\r\n  }\r\n\r\n  unlinkTile() {\r\n    this.linkedTile = null;\r\n  }\r\n\r\n  isEmpty() {\r\n    return !this.linkedTile;\r\n  }\r\n\r\n  makeAnEmpty() {\r\n    SCORE = 0;\r\n    this.gameScore.innerHTML = SCORE;\r\n    return this.linkedTile = null;\r\n  }\r\n\r\n  linkTileForMerge(tile) {\r\n    tile.setXY(this.x, this.y);\r\n    this.linkedTileForMerge = tile;\r\n  }\r\n\r\n  unlinkTileForMerge() {\r\n    this.linkedTileForMerge = null;\r\n  }\r\n\r\n  hasTileForMerge() {\r\n    return !!this.linkedTileForMerge;\r\n  }\r\n\r\n  canAccept(newTile) {\r\n    return (\r\n      this.isEmpty() ||\r\n      (!this.hasTileForMerge() && this.linkedTile.value === newTile.value)\r\n    );\r\n  }\r\n\r\n  mergeTiles() {\r\n    if (this.linkedTile) {\r\n      const result = this.linkedTile.value + this.linkedTileForMerge.value;\r\n      this.linkedTile.setValue(result);\r\n\r\n      this.score += result;\r\n\r\n      if (SCORE < this.score) {\r\n        console.log(this.score)\r\n        SCORE = this.score;\r\n        this.gameScore.textContent = SCORE;\r\n      }\r\n\r\n      if (result >= 2048) {\r\n        const win = document.querySelector('.message-win');\r\n        win.classList.toggle('hidden');\r\n      }\r\n\r\n      this.linkedTileForMerge.removeFromDOM();\r\n      this.unlinkTileForMerge();\r\n    }\r\n  }\r\n}\r\n","const COLORS = {\n  2: '#eee4da',\n  4: '#ede0c8',\n  8: '#f2b179',\n  16: '#f59563',\n  32: '#f67c5f',\n  64: '#f65e3b',\n  128: '#edcf72',\n  256: '#edcc61',\n  512: '#edc850',\n  1024: '#edc53f',\n  2048: '#edc22e',\n};\n\nexport class Tile {\n  constructor(gridElement) {\n    this.tileElement = document.createElement('div');\n    this.tileElement.classList.add('tile');\n    this.setValue(Math.random() > 0.5 ? 2 : 4);\n    gridElement.append(this.tileElement);\n  }\n\n  setValue(value) {\n    this.value = value;\n    this.tileElement.textContent = value;\n    this.tileElement.style.setProperty('--bg-color', `${COLORS[value]}`);\n\n    this.tileElement.style.setProperty(\n      '--text-color',\n      `${value >= 8 ? '#f9f6f2' : '#776e65'}`,\n    );\n  }\n\n  setXY(x, y) {\n    this.x = x;\n    this.y = y;\n    this.tileElement.style.setProperty('--x', x);\n    this.tileElement.style.setProperty('--y', y);\n  }\n\n  removeFromDOM() {\n    this.tileElement.remove();\n  }\n\n  waitForTransitionEnd() {\n    return new Promise((resolve) => {\n      this.tileElement.addEventListener('transitionend', resolve, {\n        once: true,\n      });\n    });\n  }\n\n  waitForAnimationEnd() {\n    return new Promise((resolve) => {\n      this.tileElement.addEventListener('animationend', resolve, {\n        once: true,\n      });\n    });\n  }\n}\n"],"names":["$8713978b2328d32b$export$2996f80ef42b8419","instance","Constructor","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$4fc75ccb937ab1df$export$d60067ff2358eee8","protoProps","staticProps","prototype","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","toString","call","slice","constructor","name","test","$143a497f85a21e4c$var$SCORE","$143a497f85a21e4c$export$d4a1bccfd52ebd3","Ceil","gridElement","x","y","cell","document","createElement","classList","add","append","score","gameScore","querySelector","value","tile","setXY","linkedTile","innerHTML","linkedTileForMerge","newTile","isEmpty","hasTileForMerge","result","setValue","console","log","textContent","win","toggle","removeFromDOM","unlinkTileForMerge","$0158782d112d75f2$var$COLORS","$0158782d112d75f2$export$235cb65c20ad2b7","Tile","tileElement","Math","random","style","setProperty","concat","remove","_this","Promise","resolve","addEventListener","once","$3d28d7f1aac198f5$export$985739bfa5723e08","Game","cells","$3d28d7f1aac198f5$var$GRID_SIZE","push","floor","cellsGroupedByColumn","groupCellsByColumn","cellsGroupedByReversedColumn","map","column","reverse","cellsGroupedByRow","groupCellsByRow","cellsGroupedByReversedRow","raw","emptyCells","filter","randomIndex","reduce","groupedCells","slideTiles","canMove","some","group","canMoveInGroup","index","targetCell","canAccept","promises","forEach","slideTilesInGroup","all","mergeTiles","cellWithTile","j","waitForTransitionEnd","linkTile","linkTileForMerge","unlinkTile","getRandomEmptyCell","tiles","querySelectorAll","$197cd56b15c33885$var$gridElement","getElementById","$197cd56b15c33885$var$lose","$197cd56b15c33885$var$start","$197cd56b15c33885$var$game","$197cd56b15c33885$var$setupInputOnce","$197cd56b15c33885$var$handleInput","event","canMoveUp","moveUp","canMoveDown","moveDown","canMoveLeft","moveLeft","canMoveRight","moveRight","waitForAnimationEnd","$197cd56b15c33885$var$button","contains","start","replace","restart"],"version":3,"file":"index.3aff1042.js.map"}